/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.goshippo.shippo_sdk.models.operations;

import com.goshippo.shippo_sdk.models.components.AddressCreateRequest;
import com.goshippo.shippo_sdk.models.components.BatchCreateRequest;
import com.goshippo.shippo_sdk.models.components.BatchShipmentCreateRequest;
import com.goshippo.shippo_sdk.models.components.CarrierAccountBase;
import com.goshippo.shippo_sdk.models.components.ConnectExistingOwnAccountRequest;
import com.goshippo.shippo_sdk.models.components.CustomsDeclarationCreateRequest;
import com.goshippo.shippo_sdk.models.components.CustomsItemCreateRequest;
import com.goshippo.shippo_sdk.models.components.DefaultParcelTemplateUpdateRequest;
import com.goshippo.shippo_sdk.models.components.LiveRateCreateRequest;
import com.goshippo.shippo_sdk.models.components.ManifestCreateRequest;
import com.goshippo.shippo_sdk.models.components.OrderCreateRequest;
import com.goshippo.shippo_sdk.models.components.PickupBase;
import com.goshippo.shippo_sdk.models.components.RefundRequestBody;
import com.goshippo.shippo_sdk.models.components.ServiceGroupCreateRequest;
import com.goshippo.shippo_sdk.models.components.ServiceGroupUpdateRequest;
import com.goshippo.shippo_sdk.models.components.ShipmentCreateRequest;
import com.goshippo.shippo_sdk.models.components.ShippoAccountUpdateRequest;
import com.goshippo.shippo_sdk.models.components.TracksRequest;
import com.goshippo.shippo_sdk.models.components.UserParcelTemplateCreateRequest;
import com.goshippo.shippo_sdk.models.components.UserParcelTemplateUpdateRequest;
import com.goshippo.shippo_sdk.models.components.WebhookUpdateRequest;
import java.lang.Exception;
import java.lang.Long;
import java.lang.String;
import java.util.List;
import java.util.Optional;

public class SDKMethodInterfaces {


    public interface MethodCallListAddresses {
        ListAddressesResponse list(
            Optional<Long> page,
            Optional<Long> results,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateAddress {
        CreateAddressResponse create(
            Optional<String> shippoApiVersion,
            AddressCreateRequest addressCreateRequest) throws Exception;
    }


    public interface MethodCallGetAddress {
        GetAddressResponse get(
            String addressId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallValidateAddress {
        ValidateAddressResponse validate(
            String addressId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateBatch {
        CreateBatchResponse create(
            Optional<String> shippoApiVersion,
            BatchCreateRequest batchCreateRequest) throws Exception;
    }


    public interface MethodCallGetBatch {
        GetBatchResponse get(
            String batchId,
            Optional<Long> page,
            Optional<Long> results,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallAddShipmentsToBatch {
        AddShipmentsToBatchResponse addShipments(
            String batchId,
            Optional<String> shippoApiVersion,
            List<BatchShipmentCreateRequest> requestBody) throws Exception;
    }


    public interface MethodCallPurchaseBatch {
        PurchaseBatchResponse purchase(
            String batchId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallRemoveShipmentsFromBatch {
        RemoveShipmentsFromBatchResponse removeShipments(
            String batchId,
            Optional<String> shippoApiVersion,
            List<String> requestBody) throws Exception;
    }


    public interface MethodCallListCarrierAccounts {
        ListCarrierAccountsResponse list(
            ListCarrierAccountsRequest request) throws Exception;
    }


    public interface MethodCallCreateCarrierAccount {
        CreateCarrierAccountResponse create(
            Optional<String> shippoApiVersion,
            ConnectExistingOwnAccountRequest connectExistingOwnAccountRequest) throws Exception;
    }


    public interface MethodCallGetCarrierAccount {
        GetCarrierAccountResponse get(
            String carrierAccountId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallUpdateCarrierAccount {
        UpdateCarrierAccountResponse update(
            String carrierAccountId,
            Optional<String> shippoApiVersion,
            Optional<? extends CarrierAccountBase> carrierAccountBase) throws Exception;
    }


    public interface MethodCallInitiateOauth2Signin {
        InitiateOauth2SigninResponse initiateOauth2Signin(
            String carrierAccountObjectId,
            String redirectUri,
            Optional<String> state,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallRegisterCarrierAccount {
        RegisterCarrierAccountResponse register(
            Optional<String> shippoApiVersion,
            RegisterCarrierAccountRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetCarrierRegistrationStatus {
        GetCarrierRegistrationStatusResponse getRegistrationStatus(
            Carrier carrier,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListCustomsDeclarations {
        ListCustomsDeclarationsResponse list(
            Optional<Long> page,
            Optional<Long> results,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateCustomsDeclaration {
        CreateCustomsDeclarationResponse create(
            Optional<String> shippoApiVersion,
            CustomsDeclarationCreateRequest customsDeclarationCreateRequest) throws Exception;
    }


    public interface MethodCallGetCustomsDeclaration {
        GetCustomsDeclarationResponse get(
            String customsDeclarationId,
            Optional<Long> page,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListCustomsItems {
        ListCustomsItemsResponse list(
            Optional<Long> page,
            Optional<Long> results,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateCustomsItem {
        CreateCustomsItemResponse create(
            Optional<String> shippoApiVersion,
            CustomsItemCreateRequest customsItemCreateRequest) throws Exception;
    }


    public interface MethodCallGetCustomsItem {
        GetCustomsItemResponse get(
            String customsItemId,
            Optional<Long> page,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateLiveRate {
        CreateLiveRateResponse create(
            Optional<String> shippoApiVersion,
            LiveRateCreateRequest liveRateCreateRequest) throws Exception;
    }


    public interface MethodCallGetDefaultParcelTemplate {
        GetDefaultParcelTemplateResponse getDefaultParcelTemplate(
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallUpdateDefaultParcelTemplate {
        UpdateDefaultParcelTemplateResponse updateDefaultParcelTemplate(
            Optional<String> shippoApiVersion,
            Optional<? extends DefaultParcelTemplateUpdateRequest> defaultParcelTemplateUpdateRequest) throws Exception;
    }


    public interface MethodCallDeleteDefaultParcelTemplate {
        DeleteDefaultParcelTemplateResponse deleteDefaultParcelTemplate(
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListManifests {
        ListManifestsResponse list(
            Optional<Long> page,
            Optional<Long> results,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateManifest {
        CreateManifestResponse create(
            Optional<String> shippoApiVersion,
            ManifestCreateRequest manifestCreateRequest) throws Exception;
    }


    public interface MethodCallGetManifest {
        GetManifestResponse get(
            String manifestId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListOrders {
        ListOrdersResponse list(
            ListOrdersRequest request) throws Exception;
    }


    public interface MethodCallCreateOrder {
        CreateOrderResponse create(
            Optional<String> shippoApiVersion,
            OrderCreateRequest orderCreateRequest) throws Exception;
    }


    public interface MethodCallGetOrder {
        GetOrderResponse get(
            String orderId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListCarrierParcelTemplates {
        ListCarrierParcelTemplatesResponse list(
            Optional<? extends Include> include,
            Optional<String> carrier,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallGetCarrierParcelTemplate {
        GetCarrierParcelTemplateResponse get(
            String carrierParcelTemplateToken,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListParcels {
        ListParcelsResponse list(
            Optional<Long> page,
            Optional<Long> results,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateParcel {
        CreateParcelResponse create(
            Optional<String> shippoApiVersion,
            CreateParcelRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetParcel {
        GetParcelResponse get(
            String parcelId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreatePickup {
        CreatePickupResponse create(
            Optional<String> shippoApiVersion,
            PickupBase pickupBase) throws Exception;
    }


    public interface MethodCallGetRate {
        GetRateResponse get(
            String rateId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListShipmentRates {
        ListShipmentRatesResponse listShipmentRates(
            String shipmentId,
            Optional<Long> page,
            Optional<Long> results,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListShipmentRatesByCurrencyCode {
        ListShipmentRatesByCurrencyCodeResponse listShipmentRatesByCurrencyCode(
            ListShipmentRatesByCurrencyCodeRequest request) throws Exception;
    }


    public interface MethodCallCreateRefund {
        CreateRefundResponse create(
            Optional<String> shippoApiVersion,
            RefundRequestBody refundRequestBody) throws Exception;
    }


    public interface MethodCallListRefunds {
        ListRefundsResponse list(
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallGetRefund {
        GetRefundResponse get(
            String refundId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListServiceGroups {
        ListServiceGroupsResponse list(
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateServiceGroup {
        CreateServiceGroupResponse create(
            Optional<String> shippoApiVersion,
            ServiceGroupCreateRequest serviceGroupCreateRequest) throws Exception;
    }


    public interface MethodCallUpdateServiceGroup {
        UpdateServiceGroupResponse update(
            Optional<String> shippoApiVersion,
            Optional<? extends ServiceGroupUpdateRequest> serviceGroupUpdateRequest) throws Exception;
    }


    public interface MethodCallDeleteServiceGroup {
        DeleteServiceGroupResponse delete(
            String serviceGroupId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListShipments {
        ListShipmentsResponse list(
            ListShipmentsRequest request) throws Exception;
    }


    public interface MethodCallCreateShipment {
        CreateShipmentResponse create(
            Optional<String> shippoApiVersion,
            ShipmentCreateRequest shipmentCreateRequest) throws Exception;
    }


    public interface MethodCallGetShipment {
        GetShipmentResponse get(
            String shipmentId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateTrack {
        CreateTrackResponse create(
            Optional<String> shippoApiVersion,
            TracksRequest tracksRequest) throws Exception;
    }


    public interface MethodCallGetTrack {
        GetTrackResponse get(
            String trackingNumber,
            String carrier,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListTransactions {
        ListTransactionsResponse list(
            ListTransactionsRequest request) throws Exception;
    }


    public interface MethodCallCreateTransaction {
        CreateTransactionResponse create(
            Optional<String> shippoApiVersion,
            CreateTransactionRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetTransaction {
        GetTransactionResponse get(
            String transactionId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallListUserParcelTemplates {
        ListUserParcelTemplatesResponse list(
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateUserParcelTemplate {
        CreateUserParcelTemplateResponse create(
            Optional<String> shippoApiVersion,
            UserParcelTemplateCreateRequest userParcelTemplateCreateRequest) throws Exception;
    }


    public interface MethodCallDeleteUserParcelTemplate {
        DeleteUserParcelTemplateResponse delete(
            String userParcelTemplateObjectId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallGetUserParcelTemplate {
        GetUserParcelTemplateResponse get(
            String userParcelTemplateObjectId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallUpdateUserParcelTemplate {
        UpdateUserParcelTemplateResponse update(
            String userParcelTemplateObjectId,
            Optional<String> shippoApiVersion,
            Optional<? extends UserParcelTemplateUpdateRequest> userParcelTemplateUpdateRequest) throws Exception;
    }


    public interface MethodCallListShippoAccounts {
        ListShippoAccountsResponse list(
            Optional<Long> page,
            Optional<Long> results,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallCreateShippoAccount {
        CreateShippoAccountResponse create(
            Optional<String> shippoApiVersion,
            ShippoAccountUpdateRequest shippoAccountUpdateRequest) throws Exception;
    }


    public interface MethodCallGetShippoAccount {
        GetShippoAccountResponse get(
            String shippoAccountId,
            Optional<String> shippoApiVersion) throws Exception;
    }


    public interface MethodCallUpdateShippoAccount {
        UpdateShippoAccountResponse update(
            String shippoAccountId,
            Optional<String> shippoApiVersion,
            Optional<? extends ShippoAccountUpdateRequest> shippoAccountUpdateRequest) throws Exception;
    }


    public interface MethodCallCreateWebhook {
        CreateWebhookResponse createWebhook(
            WebhookUpdateRequest request) throws Exception;
    }


    public interface MethodCallListWebhooks {
        ListWebhooksResponse listWebhooksDirect() throws Exception;
    }


    public interface MethodCallGetWebhook {
        GetWebhookResponse getWebhook(
            String webhookId) throws Exception;
    }


    public interface MethodCallUpdateWebhook {
        UpdateWebhookResponse updateWebhook(
            String webhookId,
            WebhookUpdateRequest webhookUpdateRequest) throws Exception;
    }


    public interface MethodCallDeleteWebhook {
        DeleteWebhookResponse deleteWebhook(
            String webhookId) throws Exception;
    }


}

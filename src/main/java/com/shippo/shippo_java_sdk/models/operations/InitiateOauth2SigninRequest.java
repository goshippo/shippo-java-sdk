/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.shippo.shippo_java_sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import com.shippo.shippo_java_sdk.utils.SpeakeasyMetadata;
import com.shippo.shippo_java_sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class InitiateOauth2SigninRequest {

    /**
     * The carrier account ID (UUID) to start a signin process.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=CarrierAccountObjectId")
    private String carrierAccountObjectId;

    /**
     * Callback URL. The URL that tells the authorization server where to send the user back to after they approve the request.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=redirect_uri")
    private String redirectUri;

    /**
     * A random string generated by the consuming application and included in the request to prevent CSRF attacks. The consuming application checks that the same value is returned after the user authorizes Shippo.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=state")
    private Optional<? extends String> state;

    /**
     * String used to pick a non-default API version to use
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=SHIPPO-API-VERSION")
    private Optional<? extends String> shippoApiVersion;

    @JsonCreator
    public InitiateOauth2SigninRequest(
            String carrierAccountObjectId,
            String redirectUri,
            Optional<? extends String> state,
            Optional<? extends String> shippoApiVersion) {
        Utils.checkNotNull(carrierAccountObjectId, "carrierAccountObjectId");
        Utils.checkNotNull(redirectUri, "redirectUri");
        Utils.checkNotNull(state, "state");
        Utils.checkNotNull(shippoApiVersion, "shippoApiVersion");
        this.carrierAccountObjectId = carrierAccountObjectId;
        this.redirectUri = redirectUri;
        this.state = state;
        this.shippoApiVersion = shippoApiVersion;
    }
    
    public InitiateOauth2SigninRequest(
            String carrierAccountObjectId,
            String redirectUri) {
        this(carrierAccountObjectId, redirectUri, Optional.empty(), Optional.empty());
    }

    /**
     * The carrier account ID (UUID) to start a signin process.
     */
    @JsonIgnore
    public String carrierAccountObjectId() {
        return carrierAccountObjectId;
    }

    /**
     * Callback URL. The URL that tells the authorization server where to send the user back to after they approve the request.
     */
    @JsonIgnore
    public String redirectUri() {
        return redirectUri;
    }

    /**
     * A random string generated by the consuming application and included in the request to prevent CSRF attacks. The consuming application checks that the same value is returned after the user authorizes Shippo.
     */
    @JsonIgnore
    public Optional<? extends String> state() {
        return state;
    }

    /**
     * String used to pick a non-default API version to use
     */
    @JsonIgnore
    public Optional<? extends String> shippoApiVersion() {
        return shippoApiVersion;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The carrier account ID (UUID) to start a signin process.
     */
    public InitiateOauth2SigninRequest withCarrierAccountObjectId(String carrierAccountObjectId) {
        Utils.checkNotNull(carrierAccountObjectId, "carrierAccountObjectId");
        this.carrierAccountObjectId = carrierAccountObjectId;
        return this;
    }

    /**
     * Callback URL. The URL that tells the authorization server where to send the user back to after they approve the request.
     */
    public InitiateOauth2SigninRequest withRedirectUri(String redirectUri) {
        Utils.checkNotNull(redirectUri, "redirectUri");
        this.redirectUri = redirectUri;
        return this;
    }

    /**
     * A random string generated by the consuming application and included in the request to prevent CSRF attacks. The consuming application checks that the same value is returned after the user authorizes Shippo.
     */
    public InitiateOauth2SigninRequest withState(String state) {
        Utils.checkNotNull(state, "state");
        this.state = Optional.ofNullable(state);
        return this;
    }

    /**
     * A random string generated by the consuming application and included in the request to prevent CSRF attacks. The consuming application checks that the same value is returned after the user authorizes Shippo.
     */
    public InitiateOauth2SigninRequest withState(Optional<? extends String> state) {
        Utils.checkNotNull(state, "state");
        this.state = state;
        return this;
    }

    /**
     * String used to pick a non-default API version to use
     */
    public InitiateOauth2SigninRequest withShippoApiVersion(String shippoApiVersion) {
        Utils.checkNotNull(shippoApiVersion, "shippoApiVersion");
        this.shippoApiVersion = Optional.ofNullable(shippoApiVersion);
        return this;
    }

    /**
     * String used to pick a non-default API version to use
     */
    public InitiateOauth2SigninRequest withShippoApiVersion(Optional<? extends String> shippoApiVersion) {
        Utils.checkNotNull(shippoApiVersion, "shippoApiVersion");
        this.shippoApiVersion = shippoApiVersion;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InitiateOauth2SigninRequest other = (InitiateOauth2SigninRequest) o;
        return 
            java.util.Objects.deepEquals(this.carrierAccountObjectId, other.carrierAccountObjectId) &&
            java.util.Objects.deepEquals(this.redirectUri, other.redirectUri) &&
            java.util.Objects.deepEquals(this.state, other.state) &&
            java.util.Objects.deepEquals(this.shippoApiVersion, other.shippoApiVersion);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            carrierAccountObjectId,
            redirectUri,
            state,
            shippoApiVersion);
    }
    
    @Override
    public String toString() {
        return Utils.toString(InitiateOauth2SigninRequest.class,
                "carrierAccountObjectId", carrierAccountObjectId,
                "redirectUri", redirectUri,
                "state", state,
                "shippoApiVersion", shippoApiVersion);
    }
    
    public final static class Builder {
 
        private String carrierAccountObjectId;
 
        private String redirectUri;
 
        private Optional<? extends String> state = Optional.empty();
 
        private Optional<? extends String> shippoApiVersion = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The carrier account ID (UUID) to start a signin process.
         */
        public Builder carrierAccountObjectId(String carrierAccountObjectId) {
            Utils.checkNotNull(carrierAccountObjectId, "carrierAccountObjectId");
            this.carrierAccountObjectId = carrierAccountObjectId;
            return this;
        }

        /**
         * Callback URL. The URL that tells the authorization server where to send the user back to after they approve the request.
         */
        public Builder redirectUri(String redirectUri) {
            Utils.checkNotNull(redirectUri, "redirectUri");
            this.redirectUri = redirectUri;
            return this;
        }

        /**
         * A random string generated by the consuming application and included in the request to prevent CSRF attacks. The consuming application checks that the same value is returned after the user authorizes Shippo.
         */
        public Builder state(String state) {
            Utils.checkNotNull(state, "state");
            this.state = Optional.ofNullable(state);
            return this;
        }

        /**
         * A random string generated by the consuming application and included in the request to prevent CSRF attacks. The consuming application checks that the same value is returned after the user authorizes Shippo.
         */
        public Builder state(Optional<? extends String> state) {
            Utils.checkNotNull(state, "state");
            this.state = state;
            return this;
        }

        /**
         * String used to pick a non-default API version to use
         */
        public Builder shippoApiVersion(String shippoApiVersion) {
            Utils.checkNotNull(shippoApiVersion, "shippoApiVersion");
            this.shippoApiVersion = Optional.ofNullable(shippoApiVersion);
            return this;
        }

        /**
         * String used to pick a non-default API version to use
         */
        public Builder shippoApiVersion(Optional<? extends String> shippoApiVersion) {
            Utils.checkNotNull(shippoApiVersion, "shippoApiVersion");
            this.shippoApiVersion = shippoApiVersion;
            return this;
        }
        
        public InitiateOauth2SigninRequest build() {
            return new InitiateOauth2SigninRequest(
                carrierAccountObjectId,
                redirectUri,
                state,
                shippoApiVersion);
        }
    }
}


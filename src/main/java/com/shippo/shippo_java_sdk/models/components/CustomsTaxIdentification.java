/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.shippo.shippo_java_sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.shippo.shippo_java_sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

/**
 * CustomsTaxIdentification - Tax identification that may be required to ship in certain countries. Typically used to assess duties on 
 * goods that are crossing a border.
 */

public class CustomsTaxIdentification {

    /**
     * Tax identification number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    private Optional<? extends String> number;

    /**
     * Type of tax identification.
     * * `EIN` - Employer Identification Number, also known as a Federal Tax Identification Number.
     * * `VAT` - Value Added Tax identification number.
     * * `IOSS` - Import One-Stop Shop
     * * `ARN` - Australian Taxation Office Reference Number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    private Optional<? extends CustomsTaxIdentificationType> type;

    @JsonCreator
    public CustomsTaxIdentification(
            @JsonProperty("number") Optional<? extends String> number,
            @JsonProperty("type") Optional<? extends CustomsTaxIdentificationType> type) {
        Utils.checkNotNull(number, "number");
        Utils.checkNotNull(type, "type");
        this.number = number;
        this.type = type;
    }
    
    public CustomsTaxIdentification() {
        this(Optional.empty(), Optional.empty());
    }

    /**
     * Tax identification number.
     */
    @JsonIgnore
    public Optional<? extends String> number() {
        return number;
    }

    /**
     * Type of tax identification.
     * * `EIN` - Employer Identification Number, also known as a Federal Tax Identification Number.
     * * `VAT` - Value Added Tax identification number.
     * * `IOSS` - Import One-Stop Shop
     * * `ARN` - Australian Taxation Office Reference Number
     */
    @JsonIgnore
    public Optional<? extends CustomsTaxIdentificationType> type() {
        return type;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Tax identification number.
     */
    public CustomsTaxIdentification withNumber(String number) {
        Utils.checkNotNull(number, "number");
        this.number = Optional.ofNullable(number);
        return this;
    }

    /**
     * Tax identification number.
     */
    public CustomsTaxIdentification withNumber(Optional<? extends String> number) {
        Utils.checkNotNull(number, "number");
        this.number = number;
        return this;
    }

    /**
     * Type of tax identification.
     * * `EIN` - Employer Identification Number, also known as a Federal Tax Identification Number.
     * * `VAT` - Value Added Tax identification number.
     * * `IOSS` - Import One-Stop Shop
     * * `ARN` - Australian Taxation Office Reference Number
     */
    public CustomsTaxIdentification withType(CustomsTaxIdentificationType type) {
        Utils.checkNotNull(type, "type");
        this.type = Optional.ofNullable(type);
        return this;
    }

    /**
     * Type of tax identification.
     * * `EIN` - Employer Identification Number, also known as a Federal Tax Identification Number.
     * * `VAT` - Value Added Tax identification number.
     * * `IOSS` - Import One-Stop Shop
     * * `ARN` - Australian Taxation Office Reference Number
     */
    public CustomsTaxIdentification withType(Optional<? extends CustomsTaxIdentificationType> type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CustomsTaxIdentification other = (CustomsTaxIdentification) o;
        return 
            java.util.Objects.deepEquals(this.number, other.number) &&
            java.util.Objects.deepEquals(this.type, other.type);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            number,
            type);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CustomsTaxIdentification.class,
                "number", number,
                "type", type);
    }
    
    public final static class Builder {
 
        private Optional<? extends String> number = Optional.empty();
 
        private Optional<? extends CustomsTaxIdentificationType> type = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Tax identification number.
         */
        public Builder number(String number) {
            Utils.checkNotNull(number, "number");
            this.number = Optional.ofNullable(number);
            return this;
        }

        /**
         * Tax identification number.
         */
        public Builder number(Optional<? extends String> number) {
            Utils.checkNotNull(number, "number");
            this.number = number;
            return this;
        }

        /**
         * Type of tax identification.
         * * `EIN` - Employer Identification Number, also known as a Federal Tax Identification Number.
         * * `VAT` - Value Added Tax identification number.
         * * `IOSS` - Import One-Stop Shop
         * * `ARN` - Australian Taxation Office Reference Number
         */
        public Builder type(CustomsTaxIdentificationType type) {
            Utils.checkNotNull(type, "type");
            this.type = Optional.ofNullable(type);
            return this;
        }

        /**
         * Type of tax identification.
         * * `EIN` - Employer Identification Number, also known as a Federal Tax Identification Number.
         * * `VAT` - Value Added Tax identification number.
         * * `IOSS` - Import One-Stop Shop
         * * `ARN` - Australian Taxation Office Reference Number
         */
        public Builder type(Optional<? extends CustomsTaxIdentificationType> type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }
        
        public CustomsTaxIdentification build() {
            return new CustomsTaxIdentification(
                number,
                type);
        }
    }
}


/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.shippo.shippo_java_sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.shippo.shippo_java_sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class CarrierAccountBase {

    /**
     * Unique identifier of the account. Please check the &lt;a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/"&gt;carrier accounts tutorial&lt;/a&gt; 
     * page for the `account_id` per carrier.&lt;br&gt; 
     * To protect account information, this field will be masked in any API response.
     */
    @JsonProperty("account_id")
    private String accountId;

    /**
     * Determines whether the account is active. When creating a shipment, if no `carrier_accounts` are explicitly 
     * passed Shippo will query all carrier accounts that have this field set. By default, this is set to True.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    private Optional<? extends Boolean> active;

    /**
     * Carrier token, see &lt;a href="#tag/Carriers"&gt;Carriers&lt;/a&gt;&lt;br&gt;
     * Please check the &lt;a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/"&gt;carrier accounts tutorial&lt;/a&gt; page for all supported carriers.
     */
    @JsonProperty("carrier")
    private String carrier;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    private Optional<? extends CarrierAccountBaseParameters> parameters;

    @JsonCreator
    public CarrierAccountBase(
            @JsonProperty("account_id") String accountId,
            @JsonProperty("active") Optional<? extends Boolean> active,
            @JsonProperty("carrier") String carrier,
            @JsonProperty("parameters") Optional<? extends CarrierAccountBaseParameters> parameters) {
        Utils.checkNotNull(accountId, "accountId");
        Utils.checkNotNull(active, "active");
        Utils.checkNotNull(carrier, "carrier");
        Utils.checkNotNull(parameters, "parameters");
        this.accountId = accountId;
        this.active = active;
        this.carrier = carrier;
        this.parameters = parameters;
    }
    
    public CarrierAccountBase(
            String accountId,
            String carrier) {
        this(accountId, Optional.empty(), carrier, Optional.empty());
    }

    /**
     * Unique identifier of the account. Please check the &lt;a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/"&gt;carrier accounts tutorial&lt;/a&gt; 
     * page for the `account_id` per carrier.&lt;br&gt; 
     * To protect account information, this field will be masked in any API response.
     */
    @JsonIgnore
    public String accountId() {
        return accountId;
    }

    /**
     * Determines whether the account is active. When creating a shipment, if no `carrier_accounts` are explicitly 
     * passed Shippo will query all carrier accounts that have this field set. By default, this is set to True.
     */
    @JsonIgnore
    public Optional<? extends Boolean> active() {
        return active;
    }

    /**
     * Carrier token, see &lt;a href="#tag/Carriers"&gt;Carriers&lt;/a&gt;&lt;br&gt;
     * Please check the &lt;a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/"&gt;carrier accounts tutorial&lt;/a&gt; page for all supported carriers.
     */
    @JsonIgnore
    public String carrier() {
        return carrier;
    }

    @JsonIgnore
    public Optional<? extends CarrierAccountBaseParameters> parameters() {
        return parameters;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Unique identifier of the account. Please check the &lt;a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/"&gt;carrier accounts tutorial&lt;/a&gt; 
     * page for the `account_id` per carrier.&lt;br&gt; 
     * To protect account information, this field will be masked in any API response.
     */
    public CarrierAccountBase withAccountId(String accountId) {
        Utils.checkNotNull(accountId, "accountId");
        this.accountId = accountId;
        return this;
    }

    /**
     * Determines whether the account is active. When creating a shipment, if no `carrier_accounts` are explicitly 
     * passed Shippo will query all carrier accounts that have this field set. By default, this is set to True.
     */
    public CarrierAccountBase withActive(boolean active) {
        Utils.checkNotNull(active, "active");
        this.active = Optional.ofNullable(active);
        return this;
    }

    /**
     * Determines whether the account is active. When creating a shipment, if no `carrier_accounts` are explicitly 
     * passed Shippo will query all carrier accounts that have this field set. By default, this is set to True.
     */
    public CarrierAccountBase withActive(Optional<? extends Boolean> active) {
        Utils.checkNotNull(active, "active");
        this.active = active;
        return this;
    }

    /**
     * Carrier token, see &lt;a href="#tag/Carriers"&gt;Carriers&lt;/a&gt;&lt;br&gt;
     * Please check the &lt;a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/"&gt;carrier accounts tutorial&lt;/a&gt; page for all supported carriers.
     */
    public CarrierAccountBase withCarrier(String carrier) {
        Utils.checkNotNull(carrier, "carrier");
        this.carrier = carrier;
        return this;
    }

    public CarrierAccountBase withParameters(CarrierAccountBaseParameters parameters) {
        Utils.checkNotNull(parameters, "parameters");
        this.parameters = Optional.ofNullable(parameters);
        return this;
    }

    public CarrierAccountBase withParameters(Optional<? extends CarrierAccountBaseParameters> parameters) {
        Utils.checkNotNull(parameters, "parameters");
        this.parameters = parameters;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CarrierAccountBase other = (CarrierAccountBase) o;
        return 
            java.util.Objects.deepEquals(this.accountId, other.accountId) &&
            java.util.Objects.deepEquals(this.active, other.active) &&
            java.util.Objects.deepEquals(this.carrier, other.carrier) &&
            java.util.Objects.deepEquals(this.parameters, other.parameters);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            accountId,
            active,
            carrier,
            parameters);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CarrierAccountBase.class,
                "accountId", accountId,
                "active", active,
                "carrier", carrier,
                "parameters", parameters);
    }
    
    public final static class Builder {
 
        private String accountId;
 
        private Optional<? extends Boolean> active = Optional.empty();
 
        private String carrier;
 
        private Optional<? extends CarrierAccountBaseParameters> parameters = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Unique identifier of the account. Please check the &lt;a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/"&gt;carrier accounts tutorial&lt;/a&gt; 
         * page for the `account_id` per carrier.&lt;br&gt; 
         * To protect account information, this field will be masked in any API response.
         */
        public Builder accountId(String accountId) {
            Utils.checkNotNull(accountId, "accountId");
            this.accountId = accountId;
            return this;
        }

        /**
         * Determines whether the account is active. When creating a shipment, if no `carrier_accounts` are explicitly 
         * passed Shippo will query all carrier accounts that have this field set. By default, this is set to True.
         */
        public Builder active(boolean active) {
            Utils.checkNotNull(active, "active");
            this.active = Optional.ofNullable(active);
            return this;
        }

        /**
         * Determines whether the account is active. When creating a shipment, if no `carrier_accounts` are explicitly 
         * passed Shippo will query all carrier accounts that have this field set. By default, this is set to True.
         */
        public Builder active(Optional<? extends Boolean> active) {
            Utils.checkNotNull(active, "active");
            this.active = active;
            return this;
        }

        /**
         * Carrier token, see &lt;a href="#tag/Carriers"&gt;Carriers&lt;/a&gt;&lt;br&gt;
         * Please check the &lt;a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/"&gt;carrier accounts tutorial&lt;/a&gt; page for all supported carriers.
         */
        public Builder carrier(String carrier) {
            Utils.checkNotNull(carrier, "carrier");
            this.carrier = carrier;
            return this;
        }

        public Builder parameters(CarrierAccountBaseParameters parameters) {
            Utils.checkNotNull(parameters, "parameters");
            this.parameters = Optional.ofNullable(parameters);
            return this;
        }

        public Builder parameters(Optional<? extends CarrierAccountBaseParameters> parameters) {
            Utils.checkNotNull(parameters, "parameters");
            this.parameters = parameters;
            return this;
        }
        
        public CarrierAccountBase build() {
            return new CarrierAccountBase(
                accountId,
                active,
                carrier,
                parameters);
        }
    }
}


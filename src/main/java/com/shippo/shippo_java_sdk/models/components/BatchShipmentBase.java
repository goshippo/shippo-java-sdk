/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.shippo.shippo_java_sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.shippo.shippo_java_sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class BatchShipmentBase {

    /**
     * Object ID of the carrier account to be used for this shipment (will override batch default)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_account")
    private Optional<? extends String> carrierAccount;

    /**
     * A string of up to 100 characters that can be filled with any additional information you want 
     * to attach to the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    private Optional<? extends String> metadata;

    /**
     * A token that sets the shipping method for the batch, overriding the batch default. 
     * Servicelevel tokens can be found &lt;a href="#tag/Service-Levels"&gt;in this list&lt;/a&gt; 
     * or &lt;a href="#operation/ListCarrierAccounts"&gt;at this endpoint&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("servicelevel_token")
    private Optional<? extends String> servicelevelToken;

    @JsonProperty("shipment")
    private ShipmentCreateRequest shipment;

    @JsonCreator
    public BatchShipmentBase(
            @JsonProperty("carrier_account") Optional<? extends String> carrierAccount,
            @JsonProperty("metadata") Optional<? extends String> metadata,
            @JsonProperty("servicelevel_token") Optional<? extends String> servicelevelToken,
            @JsonProperty("shipment") ShipmentCreateRequest shipment) {
        Utils.checkNotNull(carrierAccount, "carrierAccount");
        Utils.checkNotNull(metadata, "metadata");
        Utils.checkNotNull(servicelevelToken, "servicelevelToken");
        Utils.checkNotNull(shipment, "shipment");
        this.carrierAccount = carrierAccount;
        this.metadata = metadata;
        this.servicelevelToken = servicelevelToken;
        this.shipment = shipment;
    }
    
    public BatchShipmentBase(
            ShipmentCreateRequest shipment) {
        this(Optional.empty(), Optional.empty(), Optional.empty(), shipment);
    }

    /**
     * Object ID of the carrier account to be used for this shipment (will override batch default)
     */
    @JsonIgnore
    public Optional<? extends String> carrierAccount() {
        return carrierAccount;
    }

    /**
     * A string of up to 100 characters that can be filled with any additional information you want 
     * to attach to the object.
     */
    @JsonIgnore
    public Optional<? extends String> metadata() {
        return metadata;
    }

    /**
     * A token that sets the shipping method for the batch, overriding the batch default. 
     * Servicelevel tokens can be found &lt;a href="#tag/Service-Levels"&gt;in this list&lt;/a&gt; 
     * or &lt;a href="#operation/ListCarrierAccounts"&gt;at this endpoint&lt;/a&gt;.
     */
    @JsonIgnore
    public Optional<? extends String> servicelevelToken() {
        return servicelevelToken;
    }

    @JsonIgnore
    public ShipmentCreateRequest shipment() {
        return shipment;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Object ID of the carrier account to be used for this shipment (will override batch default)
     */
    public BatchShipmentBase withCarrierAccount(String carrierAccount) {
        Utils.checkNotNull(carrierAccount, "carrierAccount");
        this.carrierAccount = Optional.ofNullable(carrierAccount);
        return this;
    }

    /**
     * Object ID of the carrier account to be used for this shipment (will override batch default)
     */
    public BatchShipmentBase withCarrierAccount(Optional<? extends String> carrierAccount) {
        Utils.checkNotNull(carrierAccount, "carrierAccount");
        this.carrierAccount = carrierAccount;
        return this;
    }

    /**
     * A string of up to 100 characters that can be filled with any additional information you want 
     * to attach to the object.
     */
    public BatchShipmentBase withMetadata(String metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = Optional.ofNullable(metadata);
        return this;
    }

    /**
     * A string of up to 100 characters that can be filled with any additional information you want 
     * to attach to the object.
     */
    public BatchShipmentBase withMetadata(Optional<? extends String> metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = metadata;
        return this;
    }

    /**
     * A token that sets the shipping method for the batch, overriding the batch default. 
     * Servicelevel tokens can be found &lt;a href="#tag/Service-Levels"&gt;in this list&lt;/a&gt; 
     * or &lt;a href="#operation/ListCarrierAccounts"&gt;at this endpoint&lt;/a&gt;.
     */
    public BatchShipmentBase withServicelevelToken(String servicelevelToken) {
        Utils.checkNotNull(servicelevelToken, "servicelevelToken");
        this.servicelevelToken = Optional.ofNullable(servicelevelToken);
        return this;
    }

    /**
     * A token that sets the shipping method for the batch, overriding the batch default. 
     * Servicelevel tokens can be found &lt;a href="#tag/Service-Levels"&gt;in this list&lt;/a&gt; 
     * or &lt;a href="#operation/ListCarrierAccounts"&gt;at this endpoint&lt;/a&gt;.
     */
    public BatchShipmentBase withServicelevelToken(Optional<? extends String> servicelevelToken) {
        Utils.checkNotNull(servicelevelToken, "servicelevelToken");
        this.servicelevelToken = servicelevelToken;
        return this;
    }

    public BatchShipmentBase withShipment(ShipmentCreateRequest shipment) {
        Utils.checkNotNull(shipment, "shipment");
        this.shipment = shipment;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BatchShipmentBase other = (BatchShipmentBase) o;
        return 
            java.util.Objects.deepEquals(this.carrierAccount, other.carrierAccount) &&
            java.util.Objects.deepEquals(this.metadata, other.metadata) &&
            java.util.Objects.deepEquals(this.servicelevelToken, other.servicelevelToken) &&
            java.util.Objects.deepEquals(this.shipment, other.shipment);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            carrierAccount,
            metadata,
            servicelevelToken,
            shipment);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BatchShipmentBase.class,
                "carrierAccount", carrierAccount,
                "metadata", metadata,
                "servicelevelToken", servicelevelToken,
                "shipment", shipment);
    }
    
    public final static class Builder {
 
        private Optional<? extends String> carrierAccount = Optional.empty();
 
        private Optional<? extends String> metadata = Optional.empty();
 
        private Optional<? extends String> servicelevelToken = Optional.empty();
 
        private ShipmentCreateRequest shipment;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Object ID of the carrier account to be used for this shipment (will override batch default)
         */
        public Builder carrierAccount(String carrierAccount) {
            Utils.checkNotNull(carrierAccount, "carrierAccount");
            this.carrierAccount = Optional.ofNullable(carrierAccount);
            return this;
        }

        /**
         * Object ID of the carrier account to be used for this shipment (will override batch default)
         */
        public Builder carrierAccount(Optional<? extends String> carrierAccount) {
            Utils.checkNotNull(carrierAccount, "carrierAccount");
            this.carrierAccount = carrierAccount;
            return this;
        }

        /**
         * A string of up to 100 characters that can be filled with any additional information you want 
         * to attach to the object.
         */
        public Builder metadata(String metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = Optional.ofNullable(metadata);
            return this;
        }

        /**
         * A string of up to 100 characters that can be filled with any additional information you want 
         * to attach to the object.
         */
        public Builder metadata(Optional<? extends String> metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = metadata;
            return this;
        }

        /**
         * A token that sets the shipping method for the batch, overriding the batch default. 
         * Servicelevel tokens can be found &lt;a href="#tag/Service-Levels"&gt;in this list&lt;/a&gt; 
         * or &lt;a href="#operation/ListCarrierAccounts"&gt;at this endpoint&lt;/a&gt;.
         */
        public Builder servicelevelToken(String servicelevelToken) {
            Utils.checkNotNull(servicelevelToken, "servicelevelToken");
            this.servicelevelToken = Optional.ofNullable(servicelevelToken);
            return this;
        }

        /**
         * A token that sets the shipping method for the batch, overriding the batch default. 
         * Servicelevel tokens can be found &lt;a href="#tag/Service-Levels"&gt;in this list&lt;/a&gt; 
         * or &lt;a href="#operation/ListCarrierAccounts"&gt;at this endpoint&lt;/a&gt;.
         */
        public Builder servicelevelToken(Optional<? extends String> servicelevelToken) {
            Utils.checkNotNull(servicelevelToken, "servicelevelToken");
            this.servicelevelToken = servicelevelToken;
            return this;
        }

        public Builder shipment(ShipmentCreateRequest shipment) {
            Utils.checkNotNull(shipment, "shipment");
            this.shipment = shipment;
            return this;
        }
        
        public BatchShipmentBase build() {
            return new BatchShipmentBase(
                carrierAccount,
                metadata,
                servicelevelToken,
                shipment);
        }
    }
}


/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.shippo.sdk.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.shippo.sdk.models.components.ServiceGroupUpdateRequest;
import com.shippo.sdk.utils.SpeakeasyMetadata;
import com.shippo.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class UpdateServiceGroupRequest {

    /**
     * String used to pick a non-default API version to use
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=SHIPPO-API-VERSION")
    private Optional<String> shippoApiVersion;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private Optional<? extends ServiceGroupUpdateRequest> serviceGroupUpdateRequest;

    @JsonCreator
    public UpdateServiceGroupRequest(
            Optional<String> shippoApiVersion,
            Optional<? extends ServiceGroupUpdateRequest> serviceGroupUpdateRequest) {
        Utils.checkNotNull(shippoApiVersion, "shippoApiVersion");
        Utils.checkNotNull(serviceGroupUpdateRequest, "serviceGroupUpdateRequest");
        this.shippoApiVersion = shippoApiVersion;
        this.serviceGroupUpdateRequest = serviceGroupUpdateRequest;
    }
    
    public UpdateServiceGroupRequest() {
        this(Optional.empty(), Optional.empty());
    }

    /**
     * String used to pick a non-default API version to use
     */
    @JsonIgnore
    public Optional<String> shippoApiVersion() {
        return shippoApiVersion;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ServiceGroupUpdateRequest> serviceGroupUpdateRequest() {
        return (Optional<ServiceGroupUpdateRequest>) serviceGroupUpdateRequest;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * String used to pick a non-default API version to use
     */
    public UpdateServiceGroupRequest withShippoApiVersion(String shippoApiVersion) {
        Utils.checkNotNull(shippoApiVersion, "shippoApiVersion");
        this.shippoApiVersion = Optional.ofNullable(shippoApiVersion);
        return this;
    }

    /**
     * String used to pick a non-default API version to use
     */
    public UpdateServiceGroupRequest withShippoApiVersion(Optional<String> shippoApiVersion) {
        Utils.checkNotNull(shippoApiVersion, "shippoApiVersion");
        this.shippoApiVersion = shippoApiVersion;
        return this;
    }

    public UpdateServiceGroupRequest withServiceGroupUpdateRequest(ServiceGroupUpdateRequest serviceGroupUpdateRequest) {
        Utils.checkNotNull(serviceGroupUpdateRequest, "serviceGroupUpdateRequest");
        this.serviceGroupUpdateRequest = Optional.ofNullable(serviceGroupUpdateRequest);
        return this;
    }

    public UpdateServiceGroupRequest withServiceGroupUpdateRequest(Optional<? extends ServiceGroupUpdateRequest> serviceGroupUpdateRequest) {
        Utils.checkNotNull(serviceGroupUpdateRequest, "serviceGroupUpdateRequest");
        this.serviceGroupUpdateRequest = serviceGroupUpdateRequest;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateServiceGroupRequest other = (UpdateServiceGroupRequest) o;
        return 
            Objects.deepEquals(this.shippoApiVersion, other.shippoApiVersion) &&
            Objects.deepEquals(this.serviceGroupUpdateRequest, other.serviceGroupUpdateRequest);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            shippoApiVersion,
            serviceGroupUpdateRequest);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateServiceGroupRequest.class,
                "shippoApiVersion", shippoApiVersion,
                "serviceGroupUpdateRequest", serviceGroupUpdateRequest);
    }
    
    public final static class Builder {
 
        private Optional<String> shippoApiVersion = Optional.empty();
 
        private Optional<? extends ServiceGroupUpdateRequest> serviceGroupUpdateRequest = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * String used to pick a non-default API version to use
         */
        public Builder shippoApiVersion(String shippoApiVersion) {
            Utils.checkNotNull(shippoApiVersion, "shippoApiVersion");
            this.shippoApiVersion = Optional.ofNullable(shippoApiVersion);
            return this;
        }

        /**
         * String used to pick a non-default API version to use
         */
        public Builder shippoApiVersion(Optional<String> shippoApiVersion) {
            Utils.checkNotNull(shippoApiVersion, "shippoApiVersion");
            this.shippoApiVersion = shippoApiVersion;
            return this;
        }

        public Builder serviceGroupUpdateRequest(ServiceGroupUpdateRequest serviceGroupUpdateRequest) {
            Utils.checkNotNull(serviceGroupUpdateRequest, "serviceGroupUpdateRequest");
            this.serviceGroupUpdateRequest = Optional.ofNullable(serviceGroupUpdateRequest);
            return this;
        }

        public Builder serviceGroupUpdateRequest(Optional<? extends ServiceGroupUpdateRequest> serviceGroupUpdateRequest) {
            Utils.checkNotNull(serviceGroupUpdateRequest, "serviceGroupUpdateRequest");
            this.serviceGroupUpdateRequest = serviceGroupUpdateRequest;
            return this;
        }
        
        public UpdateServiceGroupRequest build() {
            return new UpdateServiceGroupRequest(
                shippoApiVersion,
                serviceGroupUpdateRequest);
        }
    }
}


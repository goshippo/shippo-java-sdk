/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.shippo.sdk.models.components;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.shippo.sdk.utils.LazySingletonValue;
import com.shippo.sdk.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class TransactionCreateRequest {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("async")
    private Optional<Boolean> async;

    /**
     * Print format of the &lt;a href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/"&gt;label&lt;/a&gt;. If empty, will use the default format set from 
     * &lt;a href="https://apps.goshippo.com/settings/labels"&gt;the Shippo dashboard.&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_file_type")
    private Optional<? extends LabelFileTypeEnum> labelFileType;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    private Optional<String> metadata;

    @JsonProperty("rate")
    private String rate;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order")
    private Optional<String> order;

    @JsonCreator
    public TransactionCreateRequest(
            @JsonProperty("async") Optional<Boolean> async,
            @JsonProperty("label_file_type") Optional<? extends LabelFileTypeEnum> labelFileType,
            @JsonProperty("metadata") Optional<String> metadata,
            @JsonProperty("rate") String rate,
            @JsonProperty("order") Optional<String> order) {
        Utils.checkNotNull(async, "async");
        Utils.checkNotNull(labelFileType, "labelFileType");
        Utils.checkNotNull(metadata, "metadata");
        Utils.checkNotNull(rate, "rate");
        Utils.checkNotNull(order, "order");
        this.async = async;
        this.labelFileType = labelFileType;
        this.metadata = metadata;
        this.rate = rate;
        this.order = order;
    }
    
    public TransactionCreateRequest(
            String rate) {
        this(Optional.empty(), Optional.empty(), Optional.empty(), rate, Optional.empty());
    }

    @JsonIgnore
    public Optional<Boolean> async() {
        return async;
    }

    /**
     * Print format of the &lt;a href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/"&gt;label&lt;/a&gt;. If empty, will use the default format set from 
     * &lt;a href="https://apps.goshippo.com/settings/labels"&gt;the Shippo dashboard.&lt;/a&gt;
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<LabelFileTypeEnum> labelFileType() {
        return (Optional<LabelFileTypeEnum>) labelFileType;
    }

    @JsonIgnore
    public Optional<String> metadata() {
        return metadata;
    }

    @JsonIgnore
    public String rate() {
        return rate;
    }

    @JsonIgnore
    public Optional<String> order() {
        return order;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public TransactionCreateRequest withAsync(boolean async) {
        Utils.checkNotNull(async, "async");
        this.async = Optional.ofNullable(async);
        return this;
    }

    public TransactionCreateRequest withAsync(Optional<Boolean> async) {
        Utils.checkNotNull(async, "async");
        this.async = async;
        return this;
    }

    /**
     * Print format of the &lt;a href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/"&gt;label&lt;/a&gt;. If empty, will use the default format set from 
     * &lt;a href="https://apps.goshippo.com/settings/labels"&gt;the Shippo dashboard.&lt;/a&gt;
     */
    public TransactionCreateRequest withLabelFileType(LabelFileTypeEnum labelFileType) {
        Utils.checkNotNull(labelFileType, "labelFileType");
        this.labelFileType = Optional.ofNullable(labelFileType);
        return this;
    }

    /**
     * Print format of the &lt;a href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/"&gt;label&lt;/a&gt;. If empty, will use the default format set from 
     * &lt;a href="https://apps.goshippo.com/settings/labels"&gt;the Shippo dashboard.&lt;/a&gt;
     */
    public TransactionCreateRequest withLabelFileType(Optional<? extends LabelFileTypeEnum> labelFileType) {
        Utils.checkNotNull(labelFileType, "labelFileType");
        this.labelFileType = labelFileType;
        return this;
    }

    public TransactionCreateRequest withMetadata(String metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = Optional.ofNullable(metadata);
        return this;
    }

    public TransactionCreateRequest withMetadata(Optional<String> metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = metadata;
        return this;
    }

    public TransactionCreateRequest withRate(String rate) {
        Utils.checkNotNull(rate, "rate");
        this.rate = rate;
        return this;
    }

    public TransactionCreateRequest withOrder(String order) {
        Utils.checkNotNull(order, "order");
        this.order = Optional.ofNullable(order);
        return this;
    }

    public TransactionCreateRequest withOrder(Optional<String> order) {
        Utils.checkNotNull(order, "order");
        this.order = order;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TransactionCreateRequest other = (TransactionCreateRequest) o;
        return 
            Objects.deepEquals(this.async, other.async) &&
            Objects.deepEquals(this.labelFileType, other.labelFileType) &&
            Objects.deepEquals(this.metadata, other.metadata) &&
            Objects.deepEquals(this.rate, other.rate) &&
            Objects.deepEquals(this.order, other.order);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            async,
            labelFileType,
            metadata,
            rate,
            order);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TransactionCreateRequest.class,
                "async", async,
                "labelFileType", labelFileType,
                "metadata", metadata,
                "rate", rate,
                "order", order);
    }
    
    public final static class Builder {
 
        private Optional<Boolean> async;
 
        private Optional<? extends LabelFileTypeEnum> labelFileType = Optional.empty();
 
        private Optional<String> metadata = Optional.empty();
 
        private String rate;
 
        private Optional<String> order = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder async(boolean async) {
            Utils.checkNotNull(async, "async");
            this.async = Optional.ofNullable(async);
            return this;
        }

        public Builder async(Optional<Boolean> async) {
            Utils.checkNotNull(async, "async");
            this.async = async;
            return this;
        }

        /**
         * Print format of the &lt;a href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/"&gt;label&lt;/a&gt;. If empty, will use the default format set from 
         * &lt;a href="https://apps.goshippo.com/settings/labels"&gt;the Shippo dashboard.&lt;/a&gt;
         */
        public Builder labelFileType(LabelFileTypeEnum labelFileType) {
            Utils.checkNotNull(labelFileType, "labelFileType");
            this.labelFileType = Optional.ofNullable(labelFileType);
            return this;
        }

        /**
         * Print format of the &lt;a href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/"&gt;label&lt;/a&gt;. If empty, will use the default format set from 
         * &lt;a href="https://apps.goshippo.com/settings/labels"&gt;the Shippo dashboard.&lt;/a&gt;
         */
        public Builder labelFileType(Optional<? extends LabelFileTypeEnum> labelFileType) {
            Utils.checkNotNull(labelFileType, "labelFileType");
            this.labelFileType = labelFileType;
            return this;
        }

        public Builder metadata(String metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = Optional.ofNullable(metadata);
            return this;
        }

        public Builder metadata(Optional<String> metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = metadata;
            return this;
        }

        public Builder rate(String rate) {
            Utils.checkNotNull(rate, "rate");
            this.rate = rate;
            return this;
        }

        public Builder order(String order) {
            Utils.checkNotNull(order, "order");
            this.order = Optional.ofNullable(order);
            return this;
        }

        public Builder order(Optional<String> order) {
            Utils.checkNotNull(order, "order");
            this.order = order;
            return this;
        }
        
        public TransactionCreateRequest build() {
            if (async == null) {
                async = _SINGLETON_VALUE_Async.value();
            }            return new TransactionCreateRequest(
                async,
                labelFileType,
                metadata,
                rate,
                order);
        }

        private static final LazySingletonValue<Optional<Boolean>> _SINGLETON_VALUE_Async =
                new LazySingletonValue<>(
                        "async",
                        "true",
                        new TypeReference<Optional<Boolean>>() {});
    }
}


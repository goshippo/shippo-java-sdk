/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.shippo.sdk.models.components;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.shippo.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class UserParcelTemplateWithoutCarrierTemplateCreateRequest {

    /**
     * The measure unit used for length, width and height.
     */
    @JsonProperty("distance_unit")
    private DistanceUnitEnum distanceUnit;

    /**
     * The height of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
     */
    @JsonProperty("height")
    private String height;

    /**
     * The length of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
     */
    @JsonProperty("length")
    private String length;

    /**
     * The name of the User Parcel Template
     */
    @JsonProperty("name")
    private String name;

    /**
     * The weight of the package, in units specified by the weight_unit attribute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weight")
    private Optional<String> weight;

    /**
     * The unit used for weight.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weight_unit")
    private Optional<? extends WeightUnitEnum> weightUnit;

    /**
     * The width of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
     */
    @JsonProperty("width")
    private String width;

    @JsonCreator
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest(
            @JsonProperty("distance_unit") DistanceUnitEnum distanceUnit,
            @JsonProperty("height") String height,
            @JsonProperty("length") String length,
            @JsonProperty("name") String name,
            @JsonProperty("weight") Optional<String> weight,
            @JsonProperty("weight_unit") Optional<? extends WeightUnitEnum> weightUnit,
            @JsonProperty("width") String width) {
        Utils.checkNotNull(distanceUnit, "distanceUnit");
        Utils.checkNotNull(height, "height");
        Utils.checkNotNull(length, "length");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(weight, "weight");
        Utils.checkNotNull(weightUnit, "weightUnit");
        Utils.checkNotNull(width, "width");
        this.distanceUnit = distanceUnit;
        this.height = height;
        this.length = length;
        this.name = name;
        this.weight = weight;
        this.weightUnit = weightUnit;
        this.width = width;
    }
    
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest(
            DistanceUnitEnum distanceUnit,
            String height,
            String length,
            String name,
            String width) {
        this(distanceUnit, height, length, name, Optional.empty(), Optional.empty(), width);
    }

    /**
     * The measure unit used for length, width and height.
     */
    @JsonIgnore
    public DistanceUnitEnum distanceUnit() {
        return distanceUnit;
    }

    /**
     * The height of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
     */
    @JsonIgnore
    public String height() {
        return height;
    }

    /**
     * The length of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
     */
    @JsonIgnore
    public String length() {
        return length;
    }

    /**
     * The name of the User Parcel Template
     */
    @JsonIgnore
    public String name() {
        return name;
    }

    /**
     * The weight of the package, in units specified by the weight_unit attribute.
     */
    @JsonIgnore
    public Optional<String> weight() {
        return weight;
    }

    /**
     * The unit used for weight.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<WeightUnitEnum> weightUnit() {
        return (Optional<WeightUnitEnum>) weightUnit;
    }

    /**
     * The width of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
     */
    @JsonIgnore
    public String width() {
        return width;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The measure unit used for length, width and height.
     */
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest withDistanceUnit(DistanceUnitEnum distanceUnit) {
        Utils.checkNotNull(distanceUnit, "distanceUnit");
        this.distanceUnit = distanceUnit;
        return this;
    }

    /**
     * The height of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
     */
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest withHeight(String height) {
        Utils.checkNotNull(height, "height");
        this.height = height;
        return this;
    }

    /**
     * The length of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
     */
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest withLength(String length) {
        Utils.checkNotNull(length, "length");
        this.length = length;
        return this;
    }

    /**
     * The name of the User Parcel Template
     */
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * The weight of the package, in units specified by the weight_unit attribute.
     */
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest withWeight(String weight) {
        Utils.checkNotNull(weight, "weight");
        this.weight = Optional.ofNullable(weight);
        return this;
    }

    /**
     * The weight of the package, in units specified by the weight_unit attribute.
     */
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest withWeight(Optional<String> weight) {
        Utils.checkNotNull(weight, "weight");
        this.weight = weight;
        return this;
    }

    /**
     * The unit used for weight.
     */
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest withWeightUnit(WeightUnitEnum weightUnit) {
        Utils.checkNotNull(weightUnit, "weightUnit");
        this.weightUnit = Optional.ofNullable(weightUnit);
        return this;
    }

    /**
     * The unit used for weight.
     */
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest withWeightUnit(Optional<? extends WeightUnitEnum> weightUnit) {
        Utils.checkNotNull(weightUnit, "weightUnit");
        this.weightUnit = weightUnit;
        return this;
    }

    /**
     * The width of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
     */
    public UserParcelTemplateWithoutCarrierTemplateCreateRequest withWidth(String width) {
        Utils.checkNotNull(width, "width");
        this.width = width;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserParcelTemplateWithoutCarrierTemplateCreateRequest other = (UserParcelTemplateWithoutCarrierTemplateCreateRequest) o;
        return 
            Objects.deepEquals(this.distanceUnit, other.distanceUnit) &&
            Objects.deepEquals(this.height, other.height) &&
            Objects.deepEquals(this.length, other.length) &&
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.weight, other.weight) &&
            Objects.deepEquals(this.weightUnit, other.weightUnit) &&
            Objects.deepEquals(this.width, other.width);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            distanceUnit,
            height,
            length,
            name,
            weight,
            weightUnit,
            width);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UserParcelTemplateWithoutCarrierTemplateCreateRequest.class,
                "distanceUnit", distanceUnit,
                "height", height,
                "length", length,
                "name", name,
                "weight", weight,
                "weightUnit", weightUnit,
                "width", width);
    }
    
    public final static class Builder {
 
        private DistanceUnitEnum distanceUnit;
 
        private String height;
 
        private String length;
 
        private String name;
 
        private Optional<String> weight = Optional.empty();
 
        private Optional<? extends WeightUnitEnum> weightUnit = Optional.empty();
 
        private String width;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The measure unit used for length, width and height.
         */
        public Builder distanceUnit(DistanceUnitEnum distanceUnit) {
            Utils.checkNotNull(distanceUnit, "distanceUnit");
            this.distanceUnit = distanceUnit;
            return this;
        }

        /**
         * The height of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
         */
        public Builder height(String height) {
            Utils.checkNotNull(height, "height");
            this.height = height;
            return this;
        }

        /**
         * The length of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
         */
        public Builder length(String length) {
            Utils.checkNotNull(length, "length");
            this.length = length;
            return this;
        }

        /**
         * The name of the User Parcel Template
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        /**
         * The weight of the package, in units specified by the weight_unit attribute.
         */
        public Builder weight(String weight) {
            Utils.checkNotNull(weight, "weight");
            this.weight = Optional.ofNullable(weight);
            return this;
        }

        /**
         * The weight of the package, in units specified by the weight_unit attribute.
         */
        public Builder weight(Optional<String> weight) {
            Utils.checkNotNull(weight, "weight");
            this.weight = weight;
            return this;
        }

        /**
         * The unit used for weight.
         */
        public Builder weightUnit(WeightUnitEnum weightUnit) {
            Utils.checkNotNull(weightUnit, "weightUnit");
            this.weightUnit = Optional.ofNullable(weightUnit);
            return this;
        }

        /**
         * The unit used for weight.
         */
        public Builder weightUnit(Optional<? extends WeightUnitEnum> weightUnit) {
            Utils.checkNotNull(weightUnit, "weightUnit");
            this.weightUnit = weightUnit;
            return this;
        }

        /**
         * The width of the package, in units specified by the `distance_unit` attribute. Required, but if using a preset carrier template then this field must be empty.
         */
        public Builder width(String width) {
            Utils.checkNotNull(width, "width");
            this.width = width;
            return this;
        }
        
        public UserParcelTemplateWithoutCarrierTemplateCreateRequest build() {
            return new UserParcelTemplateWithoutCarrierTemplateCreateRequest(
                distanceUnit,
                height,
                length,
                name,
                weight,
                weightUnit,
                width);
        }
    }
}


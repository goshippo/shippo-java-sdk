/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.shippo.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.shippo.sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

public class UserParcelTemplateWithCarrierTemplateCreateRequest {

    /**
     * The object representing the carrier parcel template
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template")
    private Optional<? extends String> template;

    /**
     * The weight of the package, in units specified by the weight_unit attribute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weight")
    private Optional<? extends String> weight;

    /**
     * The unit used for weight.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weight_unit")
    private Optional<? extends WeightUnitEnum> weightUnit;

    @JsonCreator
    public UserParcelTemplateWithCarrierTemplateCreateRequest(
            @JsonProperty("template") Optional<? extends String> template,
            @JsonProperty("weight") Optional<? extends String> weight,
            @JsonProperty("weight_unit") Optional<? extends WeightUnitEnum> weightUnit) {
        Utils.checkNotNull(template, "template");
        Utils.checkNotNull(weight, "weight");
        Utils.checkNotNull(weightUnit, "weightUnit");
        this.template = template;
        this.weight = weight;
        this.weightUnit = weightUnit;
    }
    
    public UserParcelTemplateWithCarrierTemplateCreateRequest() {
        this(Optional.empty(), Optional.empty(), Optional.empty());
    }

    /**
     * The object representing the carrier parcel template
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<String> template() {
        return (Optional<String>) template;
    }

    /**
     * The weight of the package, in units specified by the weight_unit attribute.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<String> weight() {
        return (Optional<String>) weight;
    }

    /**
     * The unit used for weight.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<WeightUnitEnum> weightUnit() {
        return (Optional<WeightUnitEnum>) weightUnit;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The object representing the carrier parcel template
     */
    public UserParcelTemplateWithCarrierTemplateCreateRequest withTemplate(String template) {
        Utils.checkNotNull(template, "template");
        this.template = Optional.ofNullable(template);
        return this;
    }

    /**
     * The object representing the carrier parcel template
     */
    public UserParcelTemplateWithCarrierTemplateCreateRequest withTemplate(Optional<? extends String> template) {
        Utils.checkNotNull(template, "template");
        this.template = template;
        return this;
    }

    /**
     * The weight of the package, in units specified by the weight_unit attribute.
     */
    public UserParcelTemplateWithCarrierTemplateCreateRequest withWeight(String weight) {
        Utils.checkNotNull(weight, "weight");
        this.weight = Optional.ofNullable(weight);
        return this;
    }

    /**
     * The weight of the package, in units specified by the weight_unit attribute.
     */
    public UserParcelTemplateWithCarrierTemplateCreateRequest withWeight(Optional<? extends String> weight) {
        Utils.checkNotNull(weight, "weight");
        this.weight = weight;
        return this;
    }

    /**
     * The unit used for weight.
     */
    public UserParcelTemplateWithCarrierTemplateCreateRequest withWeightUnit(WeightUnitEnum weightUnit) {
        Utils.checkNotNull(weightUnit, "weightUnit");
        this.weightUnit = Optional.ofNullable(weightUnit);
        return this;
    }

    /**
     * The unit used for weight.
     */
    public UserParcelTemplateWithCarrierTemplateCreateRequest withWeightUnit(Optional<? extends WeightUnitEnum> weightUnit) {
        Utils.checkNotNull(weightUnit, "weightUnit");
        this.weightUnit = weightUnit;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserParcelTemplateWithCarrierTemplateCreateRequest other = (UserParcelTemplateWithCarrierTemplateCreateRequest) o;
        return 
            java.util.Objects.deepEquals(this.template, other.template) &&
            java.util.Objects.deepEquals(this.weight, other.weight) &&
            java.util.Objects.deepEquals(this.weightUnit, other.weightUnit);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            template,
            weight,
            weightUnit);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UserParcelTemplateWithCarrierTemplateCreateRequest.class,
                "template", template,
                "weight", weight,
                "weightUnit", weightUnit);
    }
    
    public final static class Builder {
 
        private Optional<? extends String> template = Optional.empty();
 
        private Optional<? extends String> weight = Optional.empty();
 
        private Optional<? extends WeightUnitEnum> weightUnit = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The object representing the carrier parcel template
         */
        public Builder template(String template) {
            Utils.checkNotNull(template, "template");
            this.template = Optional.ofNullable(template);
            return this;
        }

        /**
         * The object representing the carrier parcel template
         */
        public Builder template(Optional<? extends String> template) {
            Utils.checkNotNull(template, "template");
            this.template = template;
            return this;
        }

        /**
         * The weight of the package, in units specified by the weight_unit attribute.
         */
        public Builder weight(String weight) {
            Utils.checkNotNull(weight, "weight");
            this.weight = Optional.ofNullable(weight);
            return this;
        }

        /**
         * The weight of the package, in units specified by the weight_unit attribute.
         */
        public Builder weight(Optional<? extends String> weight) {
            Utils.checkNotNull(weight, "weight");
            this.weight = weight;
            return this;
        }

        /**
         * The unit used for weight.
         */
        public Builder weightUnit(WeightUnitEnum weightUnit) {
            Utils.checkNotNull(weightUnit, "weightUnit");
            this.weightUnit = Optional.ofNullable(weightUnit);
            return this;
        }

        /**
         * The unit used for weight.
         */
        public Builder weightUnit(Optional<? extends WeightUnitEnum> weightUnit) {
            Utils.checkNotNull(weightUnit, "weightUnit");
            this.weightUnit = weightUnit;
            return this;
        }
        
        public UserParcelTemplateWithCarrierTemplateCreateRequest build() {
            return new UserParcelTemplateWithCarrierTemplateCreateRequest(
                template,
                weight,
                weightUnit);
        }
    }
}

